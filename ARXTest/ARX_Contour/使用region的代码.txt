// 1) 在自定义类中测试
//static AcDbRegion* CreateRegion()
//{
//	AcDbCircle* pC1 = new AcDbCircle(AcGePoint3d(1000, 1000, 0), AcGeVector3d::kZAxis, 20);
//	AcDbCircle* pC2 = new AcDbCircle(AcGePoint3d(1000, 1000, 0), AcGeVector3d::kZAxis, 40);
//	AcDbVoidPtrArray curveSegments, regions;
//	curveSegments.append(pC1);
//	curveSegments.append(pC2);
//
//	AcDbRegion* pRegion = 0;
//
//	if(Acad::eOk == AcDbRegion::createFromCurves(curveSegments, regions));
//	{
//		/*for(int i=0;i<regions.length();i++)
//		{
//			AcDbRegion* pRegion = (AcDbRegion*)regions[i];
//			ArxUtilHelper::PostToModelSpace(pRegion);
//			pRegion->close();
//		}*/
//		if(regions.length() == 2)
//		{
//			AcDbRegion* pRegion1 = (AcDbRegion*)regions[0];
//			AcDbRegion* pRegion2 = (AcDbRegion*)regions[1];
//			acdbAcisDeleteModelerBulletins();
//			if(Acad::eOk == pRegion1->booleanOper(AcDb::kBoolSubtract, pRegion2))
//			{
//				pRegion = pRegion1;
//				/*ArxUtilHelper::PostToModelSpace(pRegion1);
//				pRegion1->close();*/
//			}
//			else
//			{
//				delete pRegion1;
//				delete pRegion2;
//			}
//		}
//	}
//	delete pC1;
//	delete pC2;
//
//	return pRegion;
//}

// subworlddraw()
//AcDbRegion* pRegion = CreateRegion();
//if(pRegion != 0)
//{
//	mode->subEntityTraits().setFillType(kAcGiFillAlways);
//	//mode->subEntityTraits().setColor(3);
//	pRegion->setColorIndex(3);
//	pRegion->worldDraw(mode);
//	delete pRegion;
//}



// 2) 命令测试
	//AcDbCircle* pC1 = new AcDbCircle(AcGePoint3d(1000, 1000, 0), AcGeVector3d::kZAxis, 20);
	//AcDbCircle* pC2 = new AcDbCircle(AcGePoint3d(1000, 1000, 0), AcGeVector3d::kZAxis, 40);
	//AcDbVoidPtrArray curveSegments, regions;
	//curveSegments.append(pC1);
	//curveSegments.append(pC2);
	//if(Acad::eOk == AcDbRegion::createFromCurves(curveSegments, regions));
	//{
	//	/*for(int i=0;i<regions.length();i++)
	//	{
	//		AcDbRegion* pRegion = (AcDbRegion*)regions[i];
	//		ArxUtilHelper::PostToModelSpace(pRegion);
	//		pRegion->close();
	//	}*/
	//	if(regions.length() == 2)
	//	{
	//		AcDbRegion* pRegion1 = (AcDbRegion*)regions[0];
	//		AcDbRegion* pRegion2 = (AcDbRegion*)regions[1];
	//		acdbAcisDeleteModelerBulletins();
	//		if(Acad::eOk == pRegion1->booleanOper(AcDb::kBoolSubtract, pRegion2))
	//		{
	//			ArxUtilHelper::PostToModelSpace(pRegion1);
	//			pRegion1->close();
	//		}
	//		else
	//		{
	//			delete pRegion1;
	//			delete pRegion2;
	//		}
	//	}
	//}
	//delete pC1;
	//delete pC2;